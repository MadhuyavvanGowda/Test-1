import cv2
import pytesseract

# Load the image and convert it to grayscale
img = cv2.imread("car.jpg")
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Apply a Gaussian blur to the image to reduce noise
blur = cv2.GaussianBlur(gray, (5, 5), 0)

# Apply adaptive thresholding to segment the characters
thresh = cv2.adaptiveThreshold(blur, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 2)

# Find contours in the thresholded image
contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

# Sort the contours by area and keep only the largest one
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:1]

# Draw a bounding box around the contour and extract the region of interest
for contour in contours:
    x, y, w, h = cv2.boundingRect(contour)
    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
    roi = thresh[y:y + h, x:x + w]


# Use Tesseract OCR to recognize the characters in the ROI
text = pytesseract.image_to_string(roi, config='--psm 11')

print("License plate number:", text)
cv2.imshow("Image", img)
cv2.waitKey(0)
cv2.destroyAllWindows()
